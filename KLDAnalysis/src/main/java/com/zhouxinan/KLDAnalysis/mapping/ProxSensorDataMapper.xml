<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhouxinan.KLDAnalysis.dao.ProxSensorDataMapper" >
  <resultMap id="BaseResultMap" type="com.zhouxinan.KLDAnalysis.pojo.ProxSensorData" >
    <id column="prox_sensor_data_id" property="proxSensorDataId" jdbcType="INTEGER" />
    <result column="proxCard" property="proxcard" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="zone" property="zone" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="offset" property="offset" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    prox_sensor_data_id, proxCard, datetime, floor, zone, type, offset
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from prox_sensor_data
    where prox_sensor_data_id = #{proxSensorDataId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from prox_sensor_data
    where prox_sensor_data_id = #{proxSensorDataId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhouxinan.KLDAnalysis.pojo.ProxSensorData" >
    <selectKey resultType="java.lang.Integer" keyProperty="proxSensorDataId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prox_sensor_data (proxCard, datetime, floor, 
      zone, type, offset)
    values (#{proxcard,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, #{floor,jdbcType=INTEGER}, 
      #{zone,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{offset,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.zhouxinan.KLDAnalysis.pojo.ProxSensorData" >
    <selectKey resultType="java.lang.Integer" keyProperty="proxSensorDataId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prox_sensor_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proxcard != null" >
        proxCard,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="zone != null" >
        zone,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="offset != null" >
        offset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proxcard != null" >
        #{proxcard,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="zone != null" >
        #{zone,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="offset != null" >
        #{offset,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhouxinan.KLDAnalysis.pojo.ProxSensorData" >
    update prox_sensor_data
    <set >
      <if test="proxcard != null" >
        proxCard = #{proxcard,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="zone != null" >
        zone = #{zone,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="offset != null" >
        offset = #{offset,jdbcType=DOUBLE},
      </if>
    </set>
    where prox_sensor_data_id = #{proxSensorDataId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhouxinan.KLDAnalysis.pojo.ProxSensorData" >
    update prox_sensor_data
    set proxCard = #{proxcard,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      floor = #{floor,jdbcType=INTEGER},
      zone = #{zone,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      offset = #{offset,jdbcType=DOUBLE}
    where prox_sensor_data_id = #{proxSensorDataId,jdbcType=INTEGER}
  </update>
</mapper>